'use client';

import { useState } from 'react';
import { 
  Filter, 
  Search
} from 'lucide-react';
import RealJobsComponent from '@/components/RealJobsComponent';
import JobApplicationDialog from '@/components/JobApplicationDialog';

import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";

export default function ApplicantJobsPage() {
  const [isDialogOpen, setIsDialogOpen] = useState(false);
  const [selectedJob, setSelectedJob] = useState(null);

  // Handle job card click
  const handleJobClick = (job) => {
    console.log('Selected job:', job);
    setSelectedJob(job);
    setIsDialogOpen(true);
  };

  // Handle successful application submission
  const handleApplicationSubmitted = () => {
    console.log('Application submitted successfully!');
    setIsDialogOpen(false);
    setSelectedJob(null);
    // You could add a toast notification here or refresh the jobs list
  };

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-3xl font-bold">Available Jobs</h2>
        
        <div className="flex items-center space-x-4">
          {/* Search input */}
          <div className="relative">
            <Search className="h-4 w-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground" />
            <Input
              placeholder="Search jobs..."
              className="pl-9 w-64"
            />
          </div>
          
          {/* Filter button */}
          <Button variant="outline" className="flex items-center">
            <Filter className="h-4 w-4 mr-2" />
            Filters
          </Button>
        </div>
      </div>
      
      {/* Real Job Cards */}
      <RealJobsComponent onJobClick={handleJobClick} />

      {/* Job Application Dialog */}
      <JobApplicationDialog
        isOpen={isDialogOpen}
        onClose={() => setIsDialogOpen(false)}
        job={selectedJob}
        onApplicationSubmitted={handleApplicationSubmitted}
      />
    </div>
  );
}
